{"version":3,"file":"static/js/872.027a7967.chunk.js","mappings":"+OAIaA,EAAQC,EAAAA,EAAAA,GAAH,mIAQLC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yPAcJG,EAAQH,EAAAA,EAAAA,MAAH,4IASLI,EAAaJ,EAAAA,EAAAA,KAAH,gFAMVK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4WAoBLO,EAAYP,EAAAA,EAAAA,OAAH,oTAeTQ,GAAYR,EAAAA,EAAAA,GAAOS,EAAAA,IAAPT,CAAH,2CAITU,EAAUV,EAAAA,EAAAA,IAAH,6H,uCCjEdW,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KAAaG,MAAM,iBAAiBC,SAAS,YACvDC,SAAUL,EAAAA,KAAaM,IAAI,EAAG,cAAcF,SAAS,cAwDvD,EArDkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MAcjB,OACE,iCACE,SAACrB,EAAD,sBACA,SAAC,KAAD,CACEsB,cALgB,CAAEC,SAAU,GAAIR,SAAU,GAAIG,SAAU,IAMxDM,iBAAkBZ,EAClBa,SAlBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBZ,EAAuBW,EAAvBX,SAAUG,EAAaQ,EAAbR,SAClBE,GACEQ,EAAAA,EAAAA,IAAM,CACJZ,MAAOD,EACPG,SAAAA,KAGJS,GACD,EAMG,UAKE,UAACzB,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,0BACA,UAACM,EAAD,YACE,SAACL,EAAD,CACEuB,KAAK,OACLC,KAAK,WACLb,UAAQ,EACRc,YAAY,2BAEd,SAAC,KAAD,CAAcD,KAAK,oBAIvB,UAAC1B,EAAD,YACE,SAACC,EAAD,wBACA,UAACM,EAAD,YACE,SAACL,EAAD,CAAOuB,KAAK,WAAWC,KAAK,WAAWb,UAAQ,KAC/C,SAAC,KAAD,CAAca,KAAK,oBAGvB,SAACtB,EAAD,CAAWqB,KAAK,SAAhB,UACE,SAACpB,EAAD,CAAWuB,KAAM,kBAM5B,EC7DD,EARc,WACZ,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LogIn/LogIn.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form as FormikForm, Field as Input } from 'formik';\nimport { RiLoginBoxFill } from 'react-icons/ri';\n\nexport const Title = styled.h2`\n  margin-bottom: 40px;\n  font-size: 35px;\n  font-weight: 900;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 600px;\n\n  border: 4px solid #ffffff;\n  border-radius: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  height: 70px;\n  gap: 24px;\n  color: #ff8282;\n  font-size: 18px;\n`;\n\nexport const InputTitle = styled.span`\n  font-size: 20px;\n  color: #ffffff;\n  width: 150px;\n`;\n\nexport const Field = styled(Input)`\n  margin: 0 0 5px 0;\n  padding: 0 10px 4px;\n  border: none;\n  border-bottom: 4px solid #ffffff;\n  outline: none;\n  background: transparent;\n  font-size: 20px;\n  font-weight: 900;\n  color: #ffffff;\n  transition: border-color 250ms linear;\n  ::placeholder {\n    color: #b8b8b8;\n  }\n\n  :focus {\n    border-color: #ffa73c;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  padding: 10px;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  border-radius: 15px;\n  color: #ffffff;\n  transition: color 200ms linear, border-color 200ms linear;\n  :hover,\n  :focus {\n    color: #ffa73c;\n    border-color: #ffa73c;\n  }\n`;\n\nexport const LoginIcon = styled(RiLoginBoxFill)`\n  color: inherit;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Label,\n  InputTitle,\n  Field,\n  SubmitBtn,\n  Wrapper,\n  LoginIcon,\n  Title,\n} from './LoginForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\n\nconst SignupSchema = Yup.object().shape({\n  userMail: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(7, 'Too Short!').required('Required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { userMail, password } = values;\n    dispatch(\n      logIn({\n        email: userMail,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = { userName: '', userMail: '', password: '' };\n  return (\n    <>\n      <Title>Log In</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label>\n            <InputTitle>User email</InputTitle>\n            <Wrapper>\n              <Field\n                type=\"mail\"\n                name=\"userMail\"\n                required\n                placeholder=\"brendanEich@gmail.com\"\n              />\n              <ErrorMessage name=\"userMail\" />\n            </Wrapper>\n          </Label>\n\n          <Label>\n            <InputTitle>Password</InputTitle>\n            <Wrapper>\n              <Field type=\"password\" name=\"password\" required />\n              <ErrorMessage name=\"password\" />\n            </Wrapper>\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <LoginIcon size={'40px'} />\n          </SubmitBtn>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst LogIn = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LogIn;\n"],"names":["Title","styled","Form","FormikForm","Label","InputTitle","Field","Input","SubmitBtn","LoginIcon","RiLoginBoxFill","Wrapper","SignupSchema","Yup","shape","userMail","email","required","password","min","dispatch","useDispatch","initialValues","userName","validationSchema","onSubmit","values","resetForm","logIn","type","name","placeholder","size"],"sourceRoot":""}