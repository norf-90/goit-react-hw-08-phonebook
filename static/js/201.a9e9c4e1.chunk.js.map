{"version":3,"file":"static/js/201.a9e9c4e1.chunk.js","mappings":"+OAIaA,EAAQC,EAAAA,EAAAA,GAAH,mIAQLC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yPAcJG,EAAQH,EAAAA,EAAAA,MAAH,4IASLI,EAAaJ,EAAAA,EAAAA,KAAH,gFAMVK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4WAoBLO,EAAYP,EAAAA,EAAAA,OAAH,oTAeTQ,GAAYR,EAAAA,EAAAA,GAAOS,EAAAA,IAAPT,CAAH,2CAITU,EAAUV,EAAAA,EAAAA,IAAH,6H,uCCjEdW,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,EAAAA,KAAaO,MAAM,iBAAiBF,SAAS,YACvDG,SAAUR,EAAAA,KAAaG,IAAI,EAAG,cAAcE,SAAS,cAqEvD,EAlEyB,WACvB,IAAMI,GAAWC,EAAAA,EAAAA,MAcjB,OACE,iCACE,SAACvB,EAAD,4BACA,SAAC,KAAD,CACEwB,cALgB,CAAET,SAAU,GAAII,SAAU,GAAIE,SAAU,IAMxDI,iBAAkBb,EAClBc,SAnBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBb,EAAiCY,EAAjCZ,SAAUI,EAAuBQ,EAAvBR,SAAUE,EAAaM,EAAbN,SAC5BC,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMf,EACNK,MAAOD,EACPE,SAAAA,KAGJO,GACD,EAMG,UAKE,UAAC1B,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,yBACA,UAACM,EAAD,YACE,SAACL,EAAD,CACEyB,KAAK,OACLD,KAAK,WACLE,YAAY,eACZd,UAAQ,KAEV,SAAC,KAAD,CAAcY,KAAK,oBAIvB,UAAC1B,EAAD,YACE,SAACC,EAAD,0BACA,UAACM,EAAD,YACE,SAACL,EAAD,CACEyB,KAAK,OACLD,KAAK,WACLZ,UAAQ,EACRc,YAAY,4BAEd,SAAC,KAAD,CAAcF,KAAK,oBAIvB,UAAC1B,EAAD,YACE,SAACC,EAAD,wBACA,UAACM,EAAD,YACE,SAACL,EAAD,CAAOyB,KAAK,WAAWD,KAAK,WAAWZ,UAAQ,KAC/C,SAAC,KAAD,CAAcY,KAAK,oBAGvB,SAACtB,EAAD,CAAWuB,KAAK,SAAhB,UACE,SAACtB,EAAD,CAAWwB,KAAM,kBAM5B,EC9ED,EARqB,WACnB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form as FormikForm, Field as Input } from 'formik';\nimport { RiUserAddFill } from 'react-icons/ri';\n\nexport const Title = styled.h2`\n  margin-bottom: 40px;\n  font-size: 35px;\n  font-weight: 900;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 600px;\n\n  border: 4px solid #ffffff;\n  border-radius: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  height: 70px;\n  gap: 24px;\n  color: #ff8282;\n  font-size: 18px;\n`;\n\nexport const InputTitle = styled.span`\n  font-size: 20px;\n  color: #ffffff;\n  width: 150px;\n`;\n\nexport const Field = styled(Input)`\n  margin: 0 0 5px 0;\n  padding: 0 10px 4px;\n  border: none;\n  border-bottom: 4px solid #ffffff;\n  outline: none;\n  background: transparent;\n  font-size: 20px;\n  font-weight: 900;\n  color: #ffffff;\n  transition: border-color 250ms linear;\n  ::placeholder {\n    color: #b8b8b8;\n  }\n\n  :focus {\n    border-color: #ffa73c;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  padding: 10px;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  border-radius: 15px;\n  color: #ffffff;\n  transition: color 200ms linear, border-color 200ms linear;\n  :hover,\n  :focus {\n    color: #ffa73c;\n    border-color: #ffa73c;\n  }\n`;\n\nexport const LoginIcon = styled(RiUserAddFill)`\n  color: inherit;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Label,\n  InputTitle,\n  Field,\n  SubmitBtn,\n  Wrapper,\n  LoginIcon,\n  Title,\n} from './RegistrationForm.styled';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\n\nconst SignupSchema = Yup.object().shape({\n  userName: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  userMail: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(7, 'Too Short!').required('Required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    const { userName, userMail, password } = values;\n    dispatch(\n      register({\n        name: userName,\n        email: userMail,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = { userName: '', userMail: '', password: '' };\n  return (\n    <>\n      <Title>Registration</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label>\n            <InputTitle>User Name</InputTitle>\n            <Wrapper>\n              <Field\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Brendan Eich\"\n                required\n              />\n              <ErrorMessage name=\"userName\" />\n            </Wrapper>\n          </Label>\n\n          <Label>\n            <InputTitle>User email</InputTitle>\n            <Wrapper>\n              <Field\n                type=\"mail\"\n                name=\"userMail\"\n                required\n                placeholder=\"brendan-eich@gmail.com\"\n              />\n              <ErrorMessage name=\"userMail\" />\n            </Wrapper>\n          </Label>\n\n          <Label>\n            <InputTitle>Password</InputTitle>\n            <Wrapper>\n              <Field type=\"password\" name=\"password\" required />\n              <ErrorMessage name=\"password\" />\n            </Wrapper>\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <LoginIcon size={'40px'} />\n          </SubmitBtn>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst Registration = () => {\n  return (\n    <>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default Registration;\n"],"names":["Title","styled","Form","FormikForm","Label","InputTitle","Field","Input","SubmitBtn","LoginIcon","RiUserAddFill","Wrapper","SignupSchema","Yup","shape","userName","min","max","required","userMail","email","password","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","register","name","type","placeholder","size"],"sourceRoot":""}