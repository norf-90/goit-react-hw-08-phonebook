{"version":3,"file":"static/js/890.0a4a1c54.chunk.js","mappings":"gRAIaA,EAAQC,EAAAA,EAAAA,GAAH,mIAQLC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8PAcJG,EAAQH,EAAAA,EAAAA,MAAH,4IASLI,EAAaJ,EAAAA,EAAAA,KAAH,gFAMVK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4WAoBLO,EAAYP,EAAAA,EAAAA,OAAH,oTAeTQ,GAAYR,EAAAA,EAAAA,GAAOS,EAAAA,IAAPT,CAAH,2CAITU,EAAUV,EAAAA,EAAAA,IAAH,6H,oBChFPW,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,SCiB7BC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KACJK,WACAE,QAAQ,WAAY,uBACpBJ,IAAI,EAAG,2BAkEZ,EA/DoB,WAClB,IAAMK,GAAWC,EAAAA,EAAAA,MACXX,GAAQY,EAAAA,EAAAA,IAAYf,GAgB1B,OACE,iCACE,SAACZ,EAAD,2BACA,SAAC,KAAD,CACE4B,cALgB,CAAEL,MAAO,GAAIJ,KAAM,IAMnCU,iBAAkBb,EAClBc,SApBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBb,EAAgBY,EAAhBZ,KAAMI,EAAUQ,EAAVR,MACRU,EACJlB,EAAMmB,OAAS,GAAKC,QAAQpB,EAAMqB,MAAK,SAAAC,GAAI,OAAIA,EAAKlB,OAASA,CAAlB,KAC7CmB,QAAQC,IAAIN,GACRA,EACFO,MAAM,GAAD,OAAIrB,EAAJ,8BAGPa,IACAP,GAASgB,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMuB,OAAQnB,KACrC,EAMG,UAKE,UAACrB,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,oBACA,UAACM,EAAD,YACE,SAACL,EAAD,CACEqC,KAAK,OACLxB,KAAK,OACLyB,MAAM,yIACNC,YAAY,eACZvB,UAAQ,KAEV,SAAC,KAAD,CAAcH,KAAK,gBAIvB,UAACf,EAAD,YACE,SAACC,EAAD,sBACA,UAACM,EAAD,YACE,SAACL,EAAD,CACEqC,KAAK,MACLxB,KAAK,QACLyB,MAAM,+FACNtB,UAAQ,EACRuB,YAAY,mBAEd,SAAC,KAAD,CAAc1B,KAAK,iBAGvB,SAACX,EAAD,CAAWmC,KAAK,SAAhB,UACE,SAAClC,EAAD,CAAWqC,KAAK,kBAM3B,E,8BCrFYC,EAAW9C,EAAAA,EAAAA,GAAH,+cA2BR+C,EAAc/C,EAAAA,EAAAA,KAAH,0DAKXgD,EAAgBhD,EAAAA,EAAAA,KAAH,0DAKbiD,EAAejD,EAAAA,EAAAA,OAAH,mYAmBZkD,GAAalD,EAAAA,EAAAA,GAAOmD,EAAAA,IAAPnD,CAAH,2CAIVoD,EAAOpD,EAAAA,EAAAA,EAAH,iVAiBJqD,GAAWrD,EAAAA,EAAAA,GAAOsD,EAAAA,IAAPtD,CAAH,2CCxCrB,EA3BgB,SAAAuD,GACd,IAAQC,EAAoBD,EAApBC,GAAItC,EAAgBqC,EAAhBrC,KAAMI,EAAUiC,EAAVjC,MACZE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACqB,EAAD,YACE,SAACC,EAAD,UAAc7B,KACd,SAAC8B,EAAD,UAAgB1B,KAChB,SAAC8B,EAAD,CAAMK,KAAI,cAASnC,GAAnB,UACE,SAAC+B,EAAD,OAEF,SAACJ,EAAD,CAAcP,KAAK,SAASgB,QAXX,WACnBlC,GAASmC,EAAAA,EAAAA,IAAcH,GACxB,EASG,UACE,SAACN,EAAD,CAAYL,KAAK,aAIxB,EChCYe,EAAO5D,EAAAA,EAAAA,GAAH,yGCGJ6D,GAAyBC,E,QAAAA,IACpC,CAACnD,EAHyB,SAAAC,GAAK,OAAIA,EAAMmD,MAAV,IAI/B,SAAClD,EAAUmD,GACT,OAAOnD,EAASkD,QAAO,qBAAG7C,KACnB+C,cAAcC,SAASF,EAAWC,cADlB,GAGxB,ICMH,GAXoB,WAClB,IAAMnD,GAAQY,EAAAA,EAAAA,IAAYmC,GAC1B,OACE,SAACD,EAAD,UACG9C,EAAMqD,KAAI,gBAAGX,EAAH,EAAGA,GAAItC,EAAP,EAAOA,KAAMuB,EAAb,EAAaA,OAAb,OACT,SAAC,EAAD,CAAkBe,GAAIA,EAAItC,KAAMA,EAAMI,MAAOmB,GAA/Be,EADL,KAKhB,ECZYrD,GAAQH,EAAAA,EAAAA,MAAH,0NAYLI,GAAaJ,EAAAA,EAAAA,KAAH,gFAMVK,IAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,4W,WCDlB,GAfmB,WACjB,IAAMwB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,KAAD,WACE,UAAC,GAAD,YACE,SAAC,GAAD,8BACA,SAAC,GAAD,CAAOP,KAAK,SAASkD,SAPN,SAAC,GAAkC,IAAfC,EAAc,EAA/BC,cAAiBD,MACvC7C,GAAS+C,EAAAA,GAAAA,IAAaF,GACvB,QASF,ECGD,GAdiB,WACf,IAAM7C,GAAWC,EAAAA,EAAAA,MAIjB,OAHA+C,EAAAA,EAAAA,YAAU,WACRhD,GAASiD,EAAAA,EAAAA,MACV,GAAE,CAACjD,KAEF,iCACE,SAAC,EAAD,KACA,SAAC,GAAD,KACA,SAAC,GAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","redux/filter/filterSelectors.js","components/ContactList/ContactList.jsx","components/FilterForm/FilterForm.styled.jsx","components/FilterForm/FIlterForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form as FormikForm, Field as Input } from 'formik';\nimport { BsTelephonePlusFill } from 'react-icons/bs';\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  font-size: 35px;\n  font-weight: 900;\n  text-align: center;\n  color: #ffffff;\n`;\n\nexport const Form = styled(FormikForm)`\n  padding: 40px;\n  margin: 0 auto 20px;\n  max-width: 600px;\n\n  border: 4px solid #ffffff;\n  border-radius: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n  height: 70px;\n  gap: 24px;\n  color: #ff8282;\n  font-size: 18px;\n`;\n\nexport const InputTitle = styled.span`\n  font-size: 20px;\n  color: #ffffff;\n  width: 150px;\n`;\n\nexport const Field = styled(Input)`\n  margin: 0 0 5px 0;\n  padding: 0 10px 4px;\n  border: none;\n  border-bottom: 4px solid #ffffff;\n  outline: none;\n  background: transparent;\n  font-size: 20px;\n  font-weight: 900;\n  color: #ffffff;\n  transition: border-color 250ms linear;\n  ::placeholder {\n    color: #b8b8b8;\n  }\n\n  :focus {\n    border-color: #ffa73c;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  cursor: pointer;\n  padding: 10px;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  border-radius: 15px;\n  color: #ffffff;\n  transition: color 200ms linear, border-color 200ms linear;\n  :hover,\n  :focus {\n    color: #ffa73c;\n    border-color: #ffa73c;\n  }\n`;\n\nexport const LoginIcon = styled(BsTelephonePlusFill)`\n  color: inherit;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  Form,\n  Label,\n  InputTitle,\n  Field,\n  SubmitBtn,\n  Wrapper,\n  Title,\n  LoginIcon,\n} from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  phone: Yup.string()\n    .required()\n    .matches(/^[0-9]+$/, 'Must be only digits')\n    .min(3, 'Must be more 3 digits'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, phone } = values;\n    const isNameAlreadyExist =\n      items.length > 0 && Boolean(items.find(item => item.name === name));\n    console.log(isNameAlreadyExist);\n    if (isNameAlreadyExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    resetForm();\n    dispatch(addContact({ name, number: phone }));\n  };\n\n  const initialValues = { phone: '', name: '' };\n  return (\n    <>\n      <Title>Add contact</Title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={SignupSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Label>\n            <InputTitle>Name</InputTitle>\n            <Wrapper>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Brendan Eich\"\n                required\n              />\n              <ErrorMessage name=\"name\" />\n            </Wrapper>\n          </Label>\n\n          <Label>\n            <InputTitle>Number</InputTitle>\n            <Wrapper>\n              <Field\n                type=\"tel\"\n                name=\"phone\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                placeholder=\"063-111-22-33\"\n              />\n              <ErrorMessage name=\"phone\" />\n            </Wrapper>\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <LoginIcon size=\"40px\" />\n          </SubmitBtn>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { FiPhoneCall } from 'react-icons/fi';\n\nexport const ListItem = styled.li`\n  position: relative;\n  font-size: 20px;\n  margin-bottom: 5px;\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  max-width: 700px;\n  margin: 0 auto 25px;\n  border: none;\n\n  :after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: -10px;\n    display: block;\n    width: 0;\n    height: 4px;\n    background: #ffffff;\n    transition: width 200ms linear;\n  }\n  :hover::after {\n    width: 100%;\n  }\n`;\n\nexport const ContactName = styled.span`\n  color: #a5ffa5;\n  width: 40%;\n`;\n\nexport const ContactNumber = styled.span`\n  color: #ff9524;\n  width: 50%;\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: transparent;\n  border: 2px solid #ffffff;\n  transition: color 200ms linear, border-color 200ms linear;\n\n  color: #ffffff;\n  li:hover & {\n    color: #ff6969;\n    border-color: #ff6969;\n  }\n`;\n\nexport const DeleteIcon = styled(MdDeleteForever)`\n  color: inherit;\n`;\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 2px solid #ffffff;\n  transition: color 200ms linear, border-color 200ms linear;\n\n  color: #ffffff;\n  li:hover & {\n    color: #48ff7f;\n    border-color: #48ff7f;\n  }\n`;\n\nexport const CallIcon = styled(FiPhoneCall)`\n  color: inherit;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n  DeleteIcon,\n  Link,\n  CallIcon,\n} from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nconst Contact = props => {\n  const { id, name, phone } = props;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListItem>\n      <ContactName>{name}</ContactName>\n      <ContactNumber>{phone}</ContactNumber>\n      <Link href={`tel:${phone}`}>\n        <CallIcon />\n      </Link>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        <DeleteIcon size=\"40px\" />\n      </DeleteButton>\n    </ListItem>\n  );\n};\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  max-width: 700px;\n  margin: 30px auto 0;\n  padding: 0;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterName) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterName.toLowerCase())\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport React from 'react';\nimport Contact from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/filter/filterSelectors';\n\nconst ContactList = () => {\n  const items = useSelector(selectFilteredContacts);\n  return (\n    <List>\n      {items.map(({ id, name, number }) => (\n        <Contact key={id} id={id} name={name} phone={number} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport { Field as Input } from 'formik';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  max-width: 500px;\n  margin: 20px auto 0;\n  height: 50px;\n  gap: 24px;\n  color: #ff8282;\n  font-size: 18px;\n`;\n\nexport const InputTitle = styled.span`\n  font-size: 20px;\n  color: #ffffff;\n  width: 150px;\n`;\n\nexport const Field = styled(Input)`\n  margin: 0 0 5px 0;\n  padding: 0 10px 4px;\n  border: none;\n  border-bottom: 4px solid #ffffff;\n  outline: none;\n  background: transparent;\n  font-size: 20px;\n  font-weight: 900;\n  color: #ffffff;\n  transition: border-color 250ms linear;\n  ::placeholder {\n    color: #b8b8b8;\n  }\n\n  :focus {\n    border-color: #ffa73c;\n  }\n`;\n","import { Formik } from 'formik';\nimport { Field, Label, InputTitle } from './FilterForm.styled';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst FilterForm = () => {\n  const dispatch = useDispatch();\n  const handleChange = ({ currentTarget: { value } }) => {\n    dispatch(changeFilter(value));\n  };\n  return (\n    <Formik>\n      <Label>\n        <InputTitle>Search by name</InputTitle>\n        <Field name=\"filter\" onChange={handleChange} />\n      </Label>\n    </Formik>\n  );\n};\n\nexport default FilterForm;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport FilterForm from 'components/FilterForm/FIlterForm';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <ContactForm />\n      <FilterForm />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Title","styled","Form","FormikForm","Label","InputTitle","Field","Input","SubmitBtn","LoginIcon","BsTelephonePlusFill","Wrapper","selectContacts","state","contacts","items","SignupSchema","Yup","shape","name","min","max","required","phone","matches","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","resetForm","isNameAlreadyExist","length","Boolean","find","item","console","log","alert","addContact","number","type","title","placeholder","size","ListItem","ContactName","ContactNumber","DeleteButton","DeleteIcon","MdDeleteForever","Link","CallIcon","FiPhoneCall","props","id","href","onClick","deleteContact","List","selectFilteredContacts","createSelector","filter","filterName","toLowerCase","includes","map","onChange","value","currentTarget","changeFilter","useEffect","fetchContacts"],"sourceRoot":""}